{"version":3,"sources":["containers/home/calendar/header.js","containers/home/calendar/days.js","reducers/calendar/index.js","containers/home/calendar/cells.js","containers/home/calendar/index.js","containers/home/addEvent/index.js","containers/home/index.js","root.js","reducers/index.js","sagas/index.js","serviceWorker.js","store/configure-store.js","index.js"],"names":["CalendarHeader","compose","withHandlers","prevMonth","_ref","currentMonth","setCurrentMonth","dateFns","subMonths","nextMonth","_ref2","addMonths","enhance","props","react_default","a","createElement","className","onClick","format","CalendarDays","days","startDate","startOfWeek","i","push","key","addDays","eventCalendar","createAction","selectedDate","typeForm","selectedEvent","calendar","handleActions","_handleActions","Object","defineProperty","state","actions","objectSpread","payload","type","events","CalendarCells","connect","event","dispatch","bindActionCreators","dispatchSelectedDate","date","dispatchTypeForm","dispatchSelectedEvent","data","onDateClick","agenda","length","setSidebarVisible","setName","setInvitesBy","setStartTime","setEndTime","setColor","onEventClick","e","stopPropagation","name","invitesBy","moment","startTime","endTime","color","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","day","formattedDate","_loop","cloneDay","dayFormat","find","x","onMouseDown","concat","isSameMonth","isSameDay","parse","map","Popup","trigger","style","backgroundColor","flowing","hoverable","Calendar","withState","Date","days_CalendarDays","AddEvent","dispatchNewEvent","onCloseSidebar","onDeleteClick","filter","newEvent","onEditClick","z","id","toConsumableArray","onSubmitClick","getTime","alert","Icon","Form","Field","value","onChange","target","placeholder","rc_time_picker_es","showSecond","minuteStep","lib","onChangeComplete","hex","Button","react","Home","Sidebar","as","Menu","animation","direction","vertical","visible","sidebarVisible","width","AppLayout","Component","component","rest","objectWithoutProperties","combineReducers","rootSaga","regenerator_default","wrap","_context","prev","next","stop","_marked","this","Boolean","window","location","hostname","match","rootReducer","initialState","arguments","undefined","persistConfig","storage","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","persistor","persistStore","run","configureStore","el","document","body","appendChild","BrowserRouter","Switch","root_AppLayout","exact","path","render","es","integration_react","loading","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbd50aa9.chunk.js","sourcesContent":["import React from 'react';\nimport dateFns from \"date-fns\";\nimport { compose, withHandlers } from 'recompose';\n\nconst enhance = compose(\n  withHandlers({\n    prevMonth: ({currentMonth, setCurrentMonth}) => () => {\n      setCurrentMonth(dateFns.subMonths(currentMonth, 1))\n    },\n    nextMonth: ({currentMonth, setCurrentMonth}) => () => {\n      setCurrentMonth(dateFns.addMonths(currentMonth, 1))\n    }\n  })\n);\n\nexport const CalendarHeader = enhance((props) => {\n  const dateFormat = \"MMMM YYYY\";\n  return (\n    <div className=\"header row flex-middle\">\n      <div className=\"col col-start\">\n        <div className=\"icon\" onClick={props.prevMonth}>\n          chevron_left\n        </div>\n      </div>\n      <div className=\"col col-center\">\n        <span>{dateFns.format(props.currentMonth, dateFormat)}</span>\n      </div>\n      <div className=\"col col-end\" onClick={props.nextMonth}>\n        <div className=\"icon\">\n          chevron_right\n        </div>\n      </div>\n    </div>\n  );\n});\n","import React from 'react'\nimport dateFns from \"date-fns\";\n\nexport const CalendarDays = ({ currentMonth }) => {\n  const dateFormat = \"dddd\";\n  const days = [];\n\n  let startDate = dateFns.startOfWeek(currentMonth);\n\n  for (let i = 0; i < 7; i++) {\n    days.push(\n      <div className=\"col col-center\" key={i}>\n        {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"days row\">\n      {days}\n    </div>\n  );\n};\n","import { handleActions } from 'redux-actions';\nimport { createAction } from 'redux-actions';\n\nexport const eventCalendar = createAction('EVENT_CALENDAR');\nexport const selectedDate = createAction('SELECTED_DATE');\nexport const typeForm = createAction('TYPE_FORM');\nexport const selectedEvent = createAction('SELECTED_EVENT');\n\nconst initialState = {\n  type: 'add',\n  selectedDate: null,\n  selectedEvent: null,\n  events: []\n};\n\nexport default handleActions(\n  {\n    [selectedEvent]: (state, actions) => {\n      return { ...state, selectedEvent: actions.payload }\n    },\n    [typeForm]: (state, actions) => {\n      return { ...state, type: actions.payload }\n    },\n    [selectedDate]: (state, actions) => {\n      return { ...state, selectedDate: actions.payload }\n    },\n    [eventCalendar]: (state, actions) => {\n      return { ...state, events: actions.payload }\n    }\n  },\n  { ...initialState }\n);\n","import dateFns from \"date-fns\";\nimport React from \"react\";\nimport { compose, withHandlers, withState } from 'recompose';\nimport { connect } from 'react-redux';\nimport { Popup } from 'semantic-ui-react'\nimport { bindActionCreators } from \"redux\";\nimport { selectedDate, typeForm, selectedEvent } from \"../../../reducers/calendar\";\nimport moment from 'moment'\n\nconst enhance = compose(\n  connect(\n    state => ({\n      event: state.calendar.events,\n      type: state.calendar.type,\n      selectedEvent: state.calendar.selectedEvent\n    }),\n    dispatch => (bindActionCreators({\n      dispatchSelectedDate: (date) => selectedDate(date),\n      dispatchTypeForm: (type) => typeForm(type),\n      dispatchSelectedEvent: (data) => selectedEvent(data)\n    }, dispatch))\n  ),\n  withHandlers({\n    onDateClick: (props) => (days, agenda) => {\n\n      if (!agenda || agenda.data.length < 3) {\n        props.setSidebarVisible(true);\n        props.dispatchSelectedDate(dateFns.format(days, 'YYYY-MM-DD'));\n        props.dispatchTypeForm('add');\n        props.dispatchSelectedEvent(null)\n        props.setName('');\n        props.setInvitesBy('');\n        props.setStartTime('');\n        props.setEndTime('');\n        props.setColor('');\n\n      }\n    },\n    onEventClick: (props) => (days, event) => (e) => {\n      e.stopPropagation();\n\n      const data = {\n        date: dateFns.format(days, 'YYYY-MM-DD'),\n        data: [event]\n      };\n\n      props.setSidebarVisible(true);\n      props.dispatchSelectedDate(dateFns.format(days, 'YYYY-MM-DD'));\n      props.dispatchTypeForm('edit');\n      props.dispatchSelectedEvent(data)\n\n      props.setName(event.name);\n      props.setInvitesBy(event.invitesBy);\n      props.setStartTime(moment(event.startTime));\n      props.setEndTime(moment(event.endTime));\n      props.setColor(event.color);\n    }\n  })\n);\n\nexport const CalendarCells = enhance((props) => {\n  const { currentMonth, selectedDate } = props;\n\n  const monthStart = dateFns.startOfMonth(currentMonth);\n  const monthEnd = dateFns.endOfMonth(monthStart);\n  const startDate = dateFns.startOfWeek(monthStart);\n  const endDate = dateFns.endOfWeek(monthEnd);\n\n  const dateFormat = \"D\";\n  const rows = [];\n\n  let days = [];\n  let day = startDate;\n  let formattedDate = \"\";\n\n  while (day <= endDate) {\n    for (let i = 0; i < 7; i++) {\n      formattedDate = dateFns.format(day, dateFormat);\n      const cloneDay = day;\n\n      let dayFormat = dateFns.format(day, 'YYYY-MM-DD');\n      let agenda = props.event.find(x => x.date === dayFormat);\n      days.push(\n        <div\n          onMouseDown={e => e.stopPropagation()}\n          className={`col cell selected ${!dateFns.isSameMonth(day, monthStart)\n            ? \"disabled\"\n            : dateFns.isSameDay(day, selectedDate) ? \"today\" : \"\"\n            }`}\n          key={day}\n          onClick={() => props.onDateClick(dateFns.parse(cloneDay), agenda)}\n        >\n          <span className=\"number\">{formattedDate}</span>\n          {\n            agenda ?\n              <div className=\"agenda-container\">\n                {\n                  agenda.data.map((x, i) =>\n                    <Popup trigger={\n                      <a key={`index-${i}`} className=\"agenda-line\" style={{ backgroundColor: x.color }}\n                         onClick={props.onEventClick(dateFns.parse(cloneDay), x)}>\n                        <div>\n                          <span>{x.name}</span>\n                        </div>\n                      </a>\n                    } flowing hoverable>\n                      <div>\n                        <div>\n                          <span>\n                            {x.name}\n                          </span>\n                        </div>\n                        <div>\n                          <span>\n                            {dateFns.format(x.startTime, 'HH:mm')} - {dateFns.format(x.endTime, 'HH:mm')}\n                          </span>\n                        </div>\n                        <div>\n                          <span>\n                            {x.invitesBy}\n                          </span>\n                        </div>\n                      </div>\n                    </Popup>\n                  )\n                }\n              </div>\n              :\n              <span className=\"bg\">{formattedDate}</span>\n          }\n        </div>\n      );\n      day = dateFns.addDays(day, 1);\n    }\n    rows.push(\n      <div className=\"row\" key={day}>\n        {days}\n      </div>\n    );\n    days = [];\n  }\n  return <div className=\"body\">{rows}</div>;\n});\n","import React from \"react\";\nimport { compose, withState } from 'recompose';\nimport { CalendarHeader } from \"./header\";\nimport { CalendarDays } from \"./days\";\nimport { CalendarCells } from \"./cells\";\n\nconst enhance = compose(\n  withState('currentMonth', 'setCurrentMonth', new Date()),\n  withState('selectedDate', 'setSelectedDate', new Date())\n);\n\nexport const Calendar = enhance((props) => {\n  return (\n    <div className=\"calendar\">\n      <CalendarHeader {...props} />\n      <CalendarDays {...props} />\n      <CalendarCells {...props} />\n    </div>\n  );\n});\n","import React, { Fragment } from 'react';\nimport { Button, Form, Icon } from 'semantic-ui-react'\nimport { compose, withState, withHandlers } from 'recompose'\nimport 'rc-time-picker/assets/index.css';\nimport TimePicker from 'rc-time-picker';\nimport dateFns from 'date-fns'\nimport { CirclePicker } from 'react-color';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { eventCalendar } from '../../../reducers/calendar/'\n\nconst enhance = compose(\n  connect(\n    state => ({\n      selectedDate: state.calendar.selectedDate,\n      selectedEvent: state.calendar.selectedEvent,\n      event: state.calendar.events,\n      type: state.calendar.type\n    }),\n    dispatch => (bindActionCreators({\n      dispatchNewEvent: (data) => eventCalendar(data)\n    }, dispatch))\n  ),\n  withState('withBlocking', 'setWithBlocking', false),\n  withHandlers({\n    onCloseSidebar: (props) => () => props.setSidebarVisible(false),\n    onDeleteClick: (props) => () => {\n      let event = props.event;\n      let agenda = event.find(x => x.date === props.selectedEvent.date);\n      let data = agenda.data.filter(x => x !== props.selectedEvent.data[0]);\n      agenda.data = data;\n      const newEvent = event.filter(x => {\n        if (x.date === agenda.date) {\n          x.data = agenda.data\n        }\n        return x\n      });\n      if (props.type === 'add') {\n\n      }\n      if (agenda.data.length === 0) {\n        const newEvent = event.filter(x => x.date !== agenda.date);\n        props.dispatchNewEvent(newEvent)\n      } else {\n        props.setSidebarVisible(false);\n        props.dispatchNewEvent(newEvent)\n      }\n    },\n    onEditClick: (props) => () => {\n      const { name, invitesBy, startTime, endTime, color } = props;\n      let event = props.event;\n      let agenda = event.find(x => {\n        if (x.date === props.selectedEvent.date) {\n          let data = x.data.map(z => {\n            if(z.id === props.selectedEvent.data[0].id){\n              z = {\n                id: props.selectedEvent.data[0].id,\n                name, invitesBy, startTime, endTime, color\n              };\n              return z\n            }\n            return z\n          });\n          x.data = data;\n          return x\n        }\n      });\n\n      props.setSidebarVisible(false);\n      props.dispatchNewEvent([...props.event, agenda])\n    },\n    onSubmitClick: (props) => () => {\n      const { name, invitesBy, startTime, endTime, color } = props;\n\n      if ((name && invitesBy && startTime && endTime && color) !== '') {\n\n        let agenda = props.event.find(x => x.date === props.selectedDate);\n\n        let now = new Date();\n\n        const data = {\n          id: now.getTime(),\n          name,\n          invitesBy,\n          startTime,\n          endTime,\n          color\n        };\n\n        if (agenda) {\n          agenda.data.push(data);\n        } else {\n          const newEvent = {\n            date: props.selectedDate,\n            data: [data]\n          };\n          props.dispatchNewEvent([...props.event, newEvent])\n        }\n\n        props.setSidebarVisible(false)\n      } else {\n        alert('Please fill in all fields.')\n      }\n    }\n  })\n);\n\nexport const AddEvent = enhance((props) => {\n  return (\n    <div className={`event-container ${props.type === 'add' ? 'bg-sidebar-add' : 'bg-sidebar-edit'}`}>\n      <div className=\"event-title-container\">\n        <div>\n          <h2 className=\"event-title\">\n            {props.type === 'add' ? 'Add' : 'Edit'} Event\n          </h2>\n          <span className=\"date-event-title\">\n            {dateFns.format(props.selectedDate, 'DD MMMM YYYY')}\n          </span>\n        </div>\n        <Icon onClick={props.onCloseSidebar} name='close' className=\"event-close\"/>\n      </div>\n      <div className=\"m-t-em\">\n        <Form>\n          <Form.Field>\n            <label>Name</label>\n            <input\n              value={props.name}\n              onChange={(e) => props.setName(e.target.value)}\n              placeholder='event name'/>\n          </Form.Field>\n          <Form.Field>\n            <label>Invites Email</label>\n            <input\n              value={props.invitesBy}\n              onChange={(e) => props.setInvitesBy(e.target.value)}\n              placeholder='xxx@example.com'/>\n          </Form.Field>\n          <Form.Field>\n            <label>Start Time</label>\n            <TimePicker\n              value={props.startTime}\n              placeholder='08:00'\n              onChange={(value) => props.setStartTime(value)}\n              showSecond={false} minuteStep={15}/>\n          </Form.Field>\n          <Form.Field>\n            <label>End Time</label>\n            <TimePicker\n              value={props.endTime}\n              placeholder='10:00'\n              onChange={(value) => props.setEndTime(value)}\n              showSecond={false} minuteStep={15}/>\n          </Form.Field>\n          <Form.Field>\n            <label>Color</label>\n            <CirclePicker\n              color={props.color}\n              onChangeComplete={(color) => props.setColor(color.hex)}\n            />\n          </Form.Field>\n          {\n            props.type === 'add' ?\n              <Button\n                onClick={props.onSubmitClick}\n                type='submit'>\n                Save\n              </Button>\n              :\n              <Fragment>\n                <Button\n                  onClick={props.onEditClick}\n                  type='submit'>\n                  Edit\n                </Button>\n                <Button\n                  onClick={props.onDeleteClick}\n                  type='submit'>\n                  Delete\n                </Button>\n              </Fragment>\n          }\n        </Form>\n      </div>\n    </div>\n  )\n});\n","import React from 'react';\nimport { Calendar } from './calendar'\nimport { AddEvent } from \"./addEvent\";\nimport { Sidebar, Menu, } from 'semantic-ui-react'\nimport { compose, withState } from 'recompose'\n\nconst enhance = compose(\n  withState('sidebarVisible', 'setSidebarVisible', false),\n  withState('name', 'setName', ''),\n  withState('invitesBy', 'setInvitesBy', ''),\n  withState('startTime', 'setStartTime', ''),\n  withState('endTime', 'setEndTime', ''),\n  withState('color', 'setColor', '#f44336'),\n);\n\nexport const Home = enhance((props) => {\n  return (\n    <div>\n      <Calendar {...props}/>\n      <Sidebar\n        as={Menu}\n        animation='overlay'\n        direction='right'\n        vertical\n        visible={props.sidebarVisible}\n        width={'wide'}\n      >\n        <AddEvent {...props}/>\n      </Sidebar>\n    </div>\n  )\n});\n","import React, { Fragment } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\n\nimport { Home } from './containers/home';\n\nconst AppLayout = ({ component: Component, ...rest }) => {\n  return (\n    <Fragment>\n      <main>\n        <Component {...rest}/>\n      </main>\n    </Fragment>\n  );\n};\n\nexport default () => (\n  <Router>\n    <Switch>\n      <AppLayout exact path=\"/\" component={Home}/>\n    </Switch>\n  </Router>\n);\n","import { combineReducers } from 'redux';\nimport calendar from './calendar';\n\nexport default combineReducers({\n  calendar\n});\n","export default function* rootSaga() {}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\n\nexport default (rootReducer, rootSaga, initialState = {}) => {\n  const persistConfig = {\n    key: 'root',\n    storage,\n  };\n\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    persistedReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n  );\n  let persistor = persistStore(store);\n  sagaMiddleware.run(rootSaga);\n\n  return {\n    store, persistor\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport Root from './root';\nimport configureStore from './store/configure-store';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\nimport 'semantic-ui-css/semantic.min.css';\nimport './assets/css/style.css'\nimport * as serviceWorker from './serviceWorker';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst { store, persistor } = configureStore(rootReducer, rootSaga);\n\nconst el = document.createElement('div');\ndocument.body.appendChild(el);\n\nconst mount = Component => render((\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Component/>\n    </PersistGate>\n  </Provider>\n), el);\n\nmount(Root);\n\nserviceWorker.unregister();\n\n"],"sourceRoot":""}